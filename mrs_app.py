# -*- coding: utf-8 -*-
"""MRS App.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EU3JgJXF67vgI69-5jyPvoDnUdooHkhk
"""

import streamlit as st
import numpy as np
import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
import difflib

# Assuming df is your DataFrame containing movie data
# If not, you should load your dataset here


df = pd.read_csv('movies.csv')

# Preprocess data
selfeatures = ['genres', 'keywords', 'title', 'tagline', 'cast', 'director', 'overview']
for feature in selfeatures:
    df[feature] = df[feature].fillna('')
comb = df['genres'] + ' ' + df['keywords'] + ' ' + df['title'] + ' ' + df['tagline'] + ' ' + df['cast'] + ' ' + df[
    'director'] + ' ' + df['overview']

# Convert the data into feature vectors
vect = TfidfVectorizer()
feat_vec = vect.fit_transform(comb)

# Get similarity score
similar = cosine_similarity(feat_vec)

# Streamlit App
st.title("Movie Recommendation App")

# User input
mov_name = st.text_input('Enter your favorite movie name: ')

# Reset button
reset_button = st.button('Reset Name')

# Search button
search_button = st.button('Search for Recommendations')

if reset_button:
    mov_name = ''

if search_button and mov_name:
    movie_list = df['title'].tolist()
    name_match = difflib.get_close_matches(mov_name, movie_list)

    if name_match:
        closest_match = name_match[0]
        index_finder = df[df.title == closest_match]['index'].values[0]
        similarity_score = list(enumerate(similar[index_finder]))

        # Sorting the movies based on their similarity score
        sorted_movies = sorted(similarity_score, key=lambda x: x[1], reverse=True)

        # Displaying suggested movies
        st.header("Movies Suggested For You To Watch:")
        for i, movie in enumerate(sorted_movies):
            index = movie[0]
            title = df[df.index == index]['title'].values[0]
            if i < 15:  # Display up to 15 recommendations
                st.write(f"{i + 1}. {title}")
    else:
        st.warning("Sorry!! No Close Match Found For Your Input.")

